# Utilize the official Bun image
FROM oven/bun:latest as base

# Install unzip and postgresql-client
RUN apt-get update && apt-get install -y unzip postgresql-client && rm -rf /var/lib/apt/lists/*

# Clear Bun cache
RUN rm -rf ~/.bun/install/cache

WORKDIR /app

# Install dependencies into a temp directory to cache them and speed up future builds
FROM base as install
RUN mkdir -p /temp/dev
COPY package.json bun.lockb /temp/dev/
RUN cd /temp/dev && bun install --frozen-lockfile

# Install production dependencies, excluding devDependencies
RUN mkdir -p /temp/prod
COPY package.json bun.lockb /temp/prod/
RUN cd /temp/prod && bun install --frozen-lockfile --production

# Copy node_modules from temp directory and copy all (non-ignored) project files into the image
FROM base as prerelease
WORKDIR /app
COPY --from=install /temp/dev/node_modules node_modules
COPY . .

# Copy production dependencies and source code into final image
FROM base as release
WORKDIR /app

# Copy production installed dependencies
COPY --from=install /temp/prod/node_modules node_modules

# Copy necessary files from the prerelease stage
COPY --from=prerelease /app /app

# Remove carriage returns from the entrypoint script and ensure it is executable
RUN sed -i 's/\r$//g' /app/scripts/entrypoint.sh && chmod +x /app/scripts/entrypoint.sh

# Change ownership of the files to the 'bun' user
RUN chown -R bun:bun /app

# Switch to non-root user
USER bun

# Expose the necessary port and set the entry point
EXPOSE 3000/tcp
